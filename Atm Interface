import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

class BankAccount {
    private double balance;

    public BankAccount(double initialBalance) {
        balance = initialBalance;
    }

    public double getBalance() {
        return balance;
    }

    public void deposit(double amount) {
        balance += amount;
    }

    public boolean withdraw(double amount) {
        if (amount <= balance) {
            balance -= amount;
            return true;
        } else {
            return false;
        }
    }
}

class ATM extends JFrame implements ActionListener {
    JTextField amountField;
    JButton withdrawButton, depositButton, checkBalanceButton;
    private BankAccount account;

    public ATM(BankAccount account) {
        this.account = account;
        
        setTitle("ATM Machine");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(500, 500);
        setLocation(450,150);
      
        
        
        JLabel amountLabel = new JLabel("Amount:");
        amountLabel.setBounds(112, 60,500,40);
        amountLabel.setFont(new Font("SAN SERIF",Font.PLAIN,20));
        add(amountLabel);
        
        amountField = new JTextField();
        amountField.setBounds(110, 100,250, 30);
        amountField.setFont(new Font("Arial",Font.BOLD,24));
        
        withdrawButton = new JButton("Withdraw");
        withdrawButton.setBounds(157, 210, 150, 30);
        withdrawButton.setBackground(Color.BLACK);
        withdrawButton.setForeground(Color.WHITE);
        withdrawButton.addActionListener(this);
        
        depositButton = new JButton("Deposit");
        depositButton.setBounds(157, 170, 150, 30);
        depositButton.setBackground(Color.BLACK);
        depositButton.setForeground(Color.WHITE);
        depositButton.addActionListener(this);
        
        checkBalanceButton = new JButton("Check Balance");
        checkBalanceButton.setBounds(157, 250, 150, 30);
        checkBalanceButton.setBackground(Color.BLACK);
        checkBalanceButton.setForeground(Color.WHITE);
        checkBalanceButton.addActionListener(this);
        
        
        add(amountField);
        add(withdrawButton);
        add(depositButton);
        add(checkBalanceButton);
        
        setLayout(new BorderLayout(5, 5));
        setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == withdrawButton) {
            
            double amount = Double.parseDouble(amountField.getText());
             amountField.setText("");
            if (account.withdraw(amount)) {
                JOptionPane.showMessageDialog(this, "Withdrawal of rupees "+amount+" successful");
              
            } else {
                JOptionPane.showMessageDialog(this, "Insufficient funds");
                
            }
        } else if (e.getSource() == depositButton) {
            double amount = Double.parseDouble(amountField.getText());
            account.deposit(amount);
            JOptionPane.showMessageDialog(this, "Deposit of Rupees "+amount+" successful");
             amountField.setText("");
        } else if (e.getSource() == checkBalanceButton) {
            JOptionPane.showMessageDialog(this, "Your balance is: " + account.getBalance());
            amountField.setText("");
        }
    }
}

public class Main {
    public static void main(String[] args) {
        BankAccount account = new BankAccount(1000);
        ATM atm = new ATM(account);
    }
}
